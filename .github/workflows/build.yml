name: Continuous Integration

on: 
  push:
    branches: [main,]
  pull_request:
    branches: [main]

jobs:
  buildWindows:
    name: Windows Build
    runs-on: windows-2022
    environment: sign
    env:
      Solution: AVMHomeAutomation.sln
      NugetSpc: AVMHomeAutomation.nuspec

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Setup NuGet
      uses: nuget/setup-nuget@v2

    - name: Add SignKeys
      uses: Bassman2/SignKey@v1
      with:
        file: Bassman.snk
        key: ${{ secrets.SIGNKEY }}

    - name: Install SHFB
      uses: Bassman2/setup-SHFB@v1

    - name: Cache packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: ${{ runner.os }}-nuget-

    - name: Nuget restore dependencies
      run: nuget restore $env:Solution

    - name: Dotnet restore dependencies
      run: dotnet restore $env:Solution

    - name: MSBuild of solution
      run: msbuild $env:Solution /p:configuration="Debug" /verbosity:minimal

    - name: MSBuild of solution
      run: msbuild $env:Solution /p:configuration="Release" /verbosity:minimal

    - name: Nuget pack nuspec
      working-directory: .\Nuget\
      run: nuget pack $env:NugetSpc -properties Configuration=Release

    - name: Upload documentation artifact
      uses: actions/upload-artifact@v4
      with:
        name: Documentation.zip
        path: Doc/AVMHomeAutomationDoc/Help/AVMHomeAutomation.chm

    - name: Upload nuget pack artifact
      uses: actions/upload-artifact@v4
      with:
        name: NugetPackage.zip
        path: Nuget/AVMHomeAutomation.*.nupkg

  buildLinux:
    name: Linux Build
    runs-on: ubuntu-22.04
    environment: sign
    env:
      Solution: AVMHomeAutomation.sln
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    - name: Add SignKeys
      uses: Bassman2/SignKey@v1
      with:
        file: Bassman.snk
        key: ${{ secrets.SIGNKEY }}

    - name: Cache packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: ${{ runner.os }}-nuget-

    - name: Restore dependencies .NET 8.0
      run: dotnet restore ./Src/AVMHomeAutomation80/AVMHomeAutomation80.csproj

    - name: Restore dependencies .NET 9.0
      run: dotnet restore ./Src/AVMHomeAutomation90/AVMHomeAutomation90.csproj

    - name: Build  .NET 8.0
      run: dotnet build Src/AVMHomeAutomation80/AVMHomeAutomation80.csproj --no-restore

    - name: Build  .NET 9.0
      run: dotnet build Src/AVMHomeAutomation90/AVMHomeAutomation90.csproj --no-restore

  buildMac:
    name: MacOS Build
    runs-on: macos-latest
    environment: sign
    env:
      Solution: AVMHomeAutomation.sln
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    - name: Add SignKeys
      uses: Bassman2/SignKey@v1
      with:
        file: Bassman.snk
        key: ${{ secrets.SIGNKEY }}

    - name: Cache packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: ${{ runner.os }}-nuget-

    - name: Restore dependencies .NET 8.0
      run: dotnet restore ./Src/AVMHomeAutomation80/AVMHomeAutomation80.csproj

    - name: Restore dependencies .NET 9.0
      run: dotnet restore ./Src/AVMHomeAutomation90/AVMHomeAutomation90.csproj

    - name: Build  .NET 8.0
      run: dotnet build Src/AVMHomeAutomation80/AVMHomeAutomation80.csproj --no-restore

    - name: Build  .NET 9.0
      run: dotnet build Src/AVMHomeAutomation90/AVMHomeAutomation90.csproj --no-restore