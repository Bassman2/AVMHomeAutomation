name: Continuous Integration

on:
  push:
    branches: [main,]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        
    name: Build ${{ matrix.os }} 
    runs-on: ${{ matrix.os }}
    environment: sign
    env:
      Solution: main/${{ github.event.repository.name }}.sln
      IsWindows: ${{ matrix.os == 'windows-latest' }}
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: main
        
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: Bassman2/WebServiceClient
        path: WebServiceClient
        
#    - name: Setup NuGet
#      uses: nuget/setup-nuget@v2

#    - name: Add msbuild to PATH
#      uses: microsoft/setup-msbuild@v2

#    - name: Nuget restore dependencies
#      run: nuget restore $env:Solution

#    - name: Dotnet restore dependencies
#      run: dotnet restore $env:Solution

    - name: Add SignKeys
      uses: Bassman2/SignKey@v1
      with:
        file: Bassman.snk
        key: ${{ secrets.SIGNKEY }}
        
    - name: Install SHFB
      uses: Bassman2/setup-SHFB@v1 
      if: $env:IsWindows      

    - name: Remove windows projects   
      run: dotnet sln $env:Solution remove main/Demo/*/*.csproj

    - name: Restore dependencies   
      run: dotnet restore $env:Solution

    - name: Build Debug 
      run: dotnet build $env:Solution -c Debug --no-restore

    - name: Build Release
      run: dotnet build $env:Solution -c Release --no-restore

    - name: Upload documentation artifact
      uses: actions/upload-artifact@v4
      with:
        name: Documentation.zip
        path: main/Doc/${{ github.event.repository.name }}Doc/Help/${{ github.event.repository.name }}.chm
      if: ${{ matrix.os == 'windows-latest' }}      

    - name: Upload nuget pack artifact
      uses: actions/upload-artifact@v4
      with:
        name: NugetPackage.zip
        path: main/Nuget/${{ github.event.repository.name }}.*.nupkg
      if: ${{ matrix.os == 'windows-latest' }}      






















